{"version":3,"sources":["Input.js","scripts.js","ResultsTable.js","Modulo.js","RSATable.js","RSA.js","Alfabet.js","App.js","index.js"],"names":["Input","val","func","style","type","value","onChange","e","isNaN","target","preventDefault","alfabet","ResultsTable","base","index","mod","binary","Math","floor","split","reverse","doBinary","modulo","binaryArr","moduloArr","i","length","push","pow","doModulo","results","resultArr","result","Number","countResult","map","color","padding","border","Modulo","useState","setBase","setIndex","setMod","className","height","width","rsa","odp","lp","Ui","Uip","Vi","Vip","ni","ai","qi","ri","countRSA","RSA","val_p","setVal_p","val_q","setVal_q","val_e","setVal_e","val_d","setVal_d","n","phi","RSATable","Alfabet","a","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44f46ca1.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Input({ val, func, style = {} }) {\n  return (\n    <input\n      type=\"text\"\n      style={style}\n      value={val}\n      onChange={(e) => {\n        if (!isNaN(e.target.value)) {\n          func(e.target.value);\n        } else {\n          e.preventDefault();\n        }\n      }}\n    />\n  );\n}\n\nexport default Input;\n","//funkcja zamieniajązca liczbe na zapis binarny\nexport function doBinary(index) {\n  let binary = \"\";\n  let value = index;\n\n  while (value >= 1) {\n    if (value % 2 === 1) {\n      binary += \"1\";\n    } else {\n      binary += \"0\";\n    }\n    value = Math.floor(value / 2);\n  }\n\n  return binary.split(\"\").reverse(); //taki zapis jest poprawny\n}\n\nexport function doModulo(value, modulo, binaryArr) {\n  const binary = binaryArr; //odwrócona do obliczania\n  let moduloArr = [];\n  // let result = value;\n\n  for (let i = 0; i < binary.length; i++) {\n    moduloArr.push(value);\n    value = Math.pow(value, 2) % modulo;\n  }\n\n  return moduloArr;\n}\n\nexport function countResult(modulo, binaryArr, moduloArr) {\n  const binary = binaryArr; //odwrócona do obliczania\n  let resultArr = [1];\n  let result = 1; //zawsze 1 jako pierwsze\n\n  for (let i = 0; i < binary.length; i++) {\n    if (Number(binary[i]) === 1) {\n      // mnożymy\n      result = (result * moduloArr[i]) % modulo;\n    }\n\n    resultArr.push(result);\n  }\n\n  return resultArr;\n}\n\n\nexport function countRSA(base, mod) {\n  let i = 0;\n\n  let odp = [\n    {\n      lp: i,\n      Ui: 0,\n      Uip: 1,\n      Vi: 1,\n      Vip: 0,\n      ni: mod,\n      ai: base,\n      qi: Math.floor(mod / base),\n      ri: mod % base,\n    },\n  ];\n  if (base > 0 && mod > 0) {\n    while (odp[i].ri > 0) {\n      i++;\n\n      odp.push({\n        lp: i,\n        Ui: odp[i - 1].Uip - odp[i - 1].qi * odp[i - 1].Ui,\n        Uip: odp[i - 1].Ui,\n        Vi: odp[i - 1].Vip - odp[i - 1].qi * odp[i - 1].Vi,\n        Vip: odp[i - 1].Vi,\n        ni: odp[i - 1].ai,\n        ai: odp[i - 1].ri,\n        qi: Math.floor(odp[i - 1].ai / odp[i - 1].ri),\n        ri: odp[i - 1].ai % odp[i - 1].ri,\n      });\n    }\n  }\n\n  return odp;\n}\n\n//alfabet\nexport const alfabet = [\n  [\"A\", 0],\n  [\"B\", 1],\n  [\"C\", 2],\n  [\"D\", 3],\n  [\"E\", 4],\n  [\"F\", 5],\n  [\"G\", 6],\n  [\"H\", 7],\n  [\"I\", 8],\n  [\"J\", 9],\n  [\"K\", 10],\n  [\"L\", 11],\n  [\"M\", 12],\n  [\"N\", 13],\n  [\"O\", 14],\n  [\"P\", 15],\n  [\"Q\", 16],\n  [\"R\", 17],\n  [\"S\", 18],\n  [\"T\", 19],\n  [\"U\", 20],\n  [\"V\", 21],\n  [\"W\", 22],\n  [\"X\", 23],\n  [\"Y\", 24],\n  [\"Z\", 25],\n];\n","import React from \"react\";\nimport { doBinary, doModulo, countResult } from \"./scripts\";\nimport \"./resultsTable.css\";\n\nfunction ResultsTable({ base, index, mod }) {\n  const binary = doBinary(index).reverse();\n  const modulo = doModulo(base, mod, binary);\n  const results = countResult(mod, binary, modulo);\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td>\n              x<sub>i</sub>\n            </td>\n            <td>\n              a<sub>i</sub>\n            </td>\n            <td>\n              t<sub>i</sub>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          {results.map((e, i) => (\n            <tr>\n              <td>{e}</td>\n              <td>{modulo[i]}</td>\n              <td>{binary[i]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <p style={{ color: \"#fff\", padding: \"15px\", border: \"2px solid #666\" }}>\n        {index ? index : \"potęga\"} = ({binary.reverse()})<sub>2</sub>\n      </p>\n    </div>\n  );\n}\n\nexport default ResultsTable;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport ResultsTable from \"./ResultsTable\";\n\nfunction Modulo() {\n  const [base, setBase] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  const [mod, setMod] = useState(\"\");\n\n  return (\n    <div className=\"modulo\">\n      <Input val={base} func={setBase} />\n      <sup>\n        <Input\n          val={index}\n          func={setIndex}\n          style={{ height: \"8px\", width: \"30px\" }}\n        />\n      </sup>\n      <span> mod</span>\n      <Input val={mod} func={setMod} />\n      <ResultsTable base={base} index={index} mod={mod} />\n    </div>\n  );\n}\n\nexport default Modulo;\n","import React from \"react\";\nimport { countRSA } from \"./scripts\";\nimport \"./resultsTable.css\";\n\nfunction ResultsTable({ base, mod, func }) {\n  const rsa = countRSA(base, mod);\n  func(rsa[rsa.length - 1].Vi);\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <td>lp</td>\n          <td>\n            U<sub>i</sub>\n          </td>\n          <td>\n            U'<sub>i</sub>\n          </td>\n          <td>\n            V<sub>i</sub>\n          </td>\n          <td>\n            V'<sub>i</sub>\n          </td>\n          <td>\n            n<sub>i</sub>\n          </td>\n          <td>\n            a<sub>i</sub>\n          </td>\n          <td>\n            q<sub>i</sub>\n          </td>\n          <td>\n            r<sub>i</sub>\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        {rsa.map((e) => (\n          <tr>\n            <td>{e.lp}</td>\n            <td>{e.Ui}</td>\n            <td>{e.Uip}</td>\n            <td>{e.Vi}</td>\n            <td>{e.Vip}</td>\n            <td>{e.ni}</td>\n            <td>{e.ai}</td>\n            <td>{e.qi}</td>\n            <td>{e.ri}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default ResultsTable;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport RSATable from \"./RSATable\";\n\nfunction RSA() {\n  const [val_p, setVal_p] = useState(null);\n  const [val_q, setVal_q] = useState(null);\n  const [val_e, setVal_e] = useState(null);\n  const [val_d, setVal_d] = useState(null);\n\n  let n = val_p * val_q;\n  let phi = (val_p - 1) * (val_q - 1);\n  let val = val_d >= 0 ? val_d % phi : val_d + phi;\n\n  return (\n    <div className=\"rsa\">\n      <div>\n        <p>\n          <span>p = </span>\n          <Input val={val_p} func={setVal_p} />\n        </p>\n        <p>\n          <span>q = </span>\n          <Input val={val_q} func={setVal_q} />\n        </p>\n        <p>\n          <span>e = </span>\n          <Input val={val_e} func={setVal_e} />\n        </p>\n\n        <p>\n          <span className=\"answer\">n = p * q = {n}</span>\n        </p>\n        <p>\n          <span className=\"answer\">Φ = ( p - 1 ) * ( q - 1 ) = {phi}</span>\n        </p>\n        <p>\n          <span className=\"answer\">e = {val_e}</span>\n        </p>\n        <p>\n          <span className=\"answer\">\n            d = {val_e} <sup>-1</sup> mod {phi}\n          </span>\n        </p>\n\n        <RSATable base={val_e} mod={phi} func={setVal_d} />\n\n        <div className=\"answer\">\n          <p>\n            Ostatni V<sub>i</sub> mod n !!!\n          </p>\n          <p>\n            {\" \"}\n            d  = {val_d} mod {phi} = {val}\n          </p>\n\n          <p>\n            <span>\n              k<sub>1</sub> = (e, n) = ({val_e + \", \" + n}){\" \"}\n            </span>\n          </p>\n          <p>\n            <span>\n              k<sub>2</sub> = (d, n) = ({val + \", \" + n})\n            </span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RSA;\n","import React from \"react\";\nimport { alfabet } from \"./scripts\";\n\nfunction Alfabet() {\n  let a = alfabet;\n\n  return (\n    <div className=\"alfabet\">\n      <table className=\"tab\">\n        <tr>\n          {a.map((e) => (\n            <th>{e[0]}</th>\n          ))}\n        </tr>\n        {a.map((e) => (\n          <td>{e[1]}</td>\n        ))}\n      </table>\n    </div>\n  );\n}\n\nexport default Alfabet;\n","import React from \"react\";\nimport Modulo from \"./Modulo\";\nimport RSA from './RSA';\nimport Alfabet from './Alfabet'\n\nfunction App() {\n  return (\n    <div>\n      <Modulo />\n      <RSA />\n      <Alfabet/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}